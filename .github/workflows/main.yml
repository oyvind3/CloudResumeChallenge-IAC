on: [push]
name: üßøüßøAzure bicep deploy
env:
  resourceGroupName: rgoyvind1201
  bicepfilePath: ./main.bicep
  resourceGroupLocation: WestUS 
  storageAccountName: cloudresumeoyvind222
  outputFilePath: ./main.json
  deployName: oyvinddeploy131
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
    - uses: actions/checkout@main

        # Builds the Bicep template
    - name: bicep-build-output
      uses: Azure/bicep-build-action@v1.0.1
      with:
        bicepFilePath: ${{  env.bicepfilePath }}
        outputFilePath: ./main.json

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        path: ./main.json
        
  
  deploybicep:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@main

      # Log into Azure
      - name: loginazureüßøüíô
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

     # - name: createdependenciesüßø
     #   uses: azure/cli@v1
     #   with:
     #     inlineScript: |
     #       az group create \
     #       --name ${{ env.resourceGroupName }} \
     #       --location ${{ env.resourceGroupLocation }}

      - name: deploybicepüí™üêù
        uses: azure/cli@v1   
        with:
          inlineScript: |
            az deployment sub create  \
            --name ${{env.deployName}}
             --location ${{env.resourceGroupLocation}} 
            --template-file ${{env.bicepfilePath}} \
            --resource-group ${{env.resourceGroupName}} \        
          
   #second build starts       
  test-deploy:
    needs: [deploybicep]
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - uses: azure/login@v1
       with: 
           creds: ${{ secrets.AZURE_CREDENTIALS }}

     - name: create folder
       uses: azure/CLI@v1
       with:
         inlineScript: |
          az storage container create -n $web --account-name ${{env.storageAccountName}}
               
     - name: Upload to blob storagebl
       uses: azure/CLI@v1
       with:
         inlineScript: |
             az storage blob upload-batch --account-name ${{env.storageAccountName}} --auth-mode key --pattern *.html --overwrite true -d '$web' -s .
             az storage blob upload-batch --account-name ${{env.storageAccountName}} --auth-mode key --pattern *.css --overwrite true -d '$web' -s .
             az storage blob upload-batch --account-name ${{env.storageAccountName}} --auth-mode key --pattern *.js --overwrite true -d '$web' -s .
     - name: Purge CDN endpoint
       uses: azure/CLI@v1
       with:
         inlineScript: |
            az cdn endpoint purge --content-paths  "/*" --profile-name "cdnofzpcph7h4irqa4" --name "finsrudcloud2" --resource-group ${{env.resourceGroupName}}
      ##Azure logout
     - name: logout
       run: |
            az logout
       if: always()